<diagram program="umletino" version="15.1"><zoom_level>6</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>30</x><y>234</y><w>156</w><h>162</h></coordinates><panel_attributes>_ DriveActionServer _
--
# action_server: rclpy.ActionServer
+ cmd_vel_pub: rclpy.node.Publisher
+ picture_data_sub: rclpy.node.Subscriptor
+ odom_sub: rclpy.node.Subscriptor
+ timer: rclpy.node.Timer
+ goal_handler: action_interface.GoalHandle

--
+ timer_callback_ast(): void

--
Responsibilities
- handling DRIVE Goal Requests
- working with DRIVE Goals
- feedback ongoing DRIVE Goals
- resulting finished DRIVE Goals
- ros com</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>204</x><y>234</y><w>156</w><h>162</h></coordinates><panel_attributes>_InitActionServer _
--
# action_server: rclpy.ActionServer
+ cmd_vel_pub: rclpy.node.Publisher
+ picture_data_sub: rclpy.node.Subscriptor
+ odom_sub: rclpy.node.Subscriptor
+ timer: rclpy.node.Timer
+ goal_handler: action_interface.GoalHandle

--
+ timer_callback_ast(): void

--
Responsibilities
- handling INIT Goal Requests
- working with INIT Goals
- feedback ongoing INIT Goals
- resulting finished INIT Goals
- ros com</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>378</x><y>234</y><w>156</w><h>162</h></coordinates><panel_attributes>_ TurnActionServer _
--
# action_server: rclpy.ActionServer
+ cmd_vel_pub: rclpy.node.Publisher
+ picture_data_sub: rclpy.node.Subscriptor
+ odom_sub: rclpy.node.Subscriptor
+ timer: rclpy.node.Timer
+ goal_handler: action_interface.GoalHandle

--
+ timer_callback_ast(): void

--
Responsibilities
- handling TURN Goal Requests
- working with TURN Goals
- feedback ongoing TURN Goals
- resulting finished TURN Goals
- ros com
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>30</x><y>426</y><w>156</w><h>114</h></coordinates><panel_attributes>_ DriveLogic_
--
- state: DriveStates
--
+ getOut(): DriveOut
+ setActive(boolean): boolean
+ state_machine(): void
+ getActiveState(): Enum

--
Responsibilities
- implement logic for drive
- gives info on request
- accepts abstracted infos</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>204</x><y>426</y><w>156</w><h>114</h></coordinates><panel_attributes>_ InitLogic_
--
- state: InitStates
--
+ getOut(): InitOut
+ setActive(boolean): boolean
+ state_machine(): void

--
Responsibilities
- implement logic for init
- gives info on request
- accepts abstracted infos</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>378</x><y>426</y><w>156</w><h>114</h></coordinates><panel_attributes>_ TurnLogic_
--
- state: TurnStates
--
+ getOut(): TurnOut
+ setActive(boolean): boolean
+ state_machine(): void
--
Responsibilities
- implement logic for turn
- gives info on request
- accepts abstracted infos</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>102</x><y>390</y><w>18</w><h>48</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>270</x><y>390</y><w>18</w><h>48</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>450</x><y>390</y><w>18</w><h>48</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>204</x><y>0</y><w>156</w><h>162</h></coordinates><panel_attributes>_ ActionHandler_
--
- action_client_turn
- action_client_init
- action client_drive
+ picture_data_sub: rclpy.node.Subscriptor

--
+ call_drive_action(): void
+ call_init_action(): void
+ call_turn_action(): void

--
Responsibilities
- handling mit goals TURN, DRIVE, INIT
- calling Action Servers
- backchecking picture data
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>96</x><y>156</y><w>150</w><h>90</h></coordinates><panel_attributes>lt=-
requests &gt;</panel_attributes><additional_attributes>230;10;10;130</additional_attributes></element><element><id>Relation</id><coordinates><x>276</x><y>156</y><w>54</w><h>90</h></coordinates><panel_attributes>lt=-
requests &gt;</panel_attributes><additional_attributes>10;10;10;130</additional_attributes></element><element><id>UMLClass</id><coordinates><x>228</x><y>636</y><w>126</w><h>90</h></coordinates><panel_attributes>&lt;&lt;LogicInterface&gt;&gt;
--
- state
--
+ getOut(): Out
+ setActive(boolean): boolean
+ state_machine(): void
+ getActiveState(): Enum
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>102</x><y>534</y><w>162</w><h>114</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>250;170;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>282</x><y>534</y><w>18</w><h>114</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;170;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>318</x><y>534</y><w>162</w><h>114</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;170;250;10</additional_attributes></element><element><id>Relation</id><coordinates><x>330</x><y>156</y><w>138</w><h>90</h></coordinates><panel_attributes>lt=-
requests &gt;</panel_attributes><additional_attributes>10;10;210;130</additional_attributes></element><element><id>UMLClass</id><coordinates><x>666</x><y>18</y><w>132</w><h>114</h></coordinates><panel_attributes>_ MainController_
--
- state: MainStates
--
+ getOut(): MainOut
+ setActive(boolean): boolean
+ state_machine(): void
--
Responsibilities
- implement logic for turn
- gives info on request
- accepts abstracted infos</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>354</x><y>72</y><w>324</w><h>18</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;520;10</additional_attributes></element><element><id>Relation</id><coordinates><x>348</x><y>126</y><w>396</w><h>558</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;910;640;910;640;10</additional_attributes></element></diagram>